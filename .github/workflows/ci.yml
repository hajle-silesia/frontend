name: CI

on:
  push:
    branches:
      [ master ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.5"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 bandit
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with bandit
        run: bandit -r .

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Set Docker image name and tag
        run: |
          GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          echo DOCKER_REPOSITORY=mtweeman/${GITHUB_REPOSITORY////_} >> $GITHUB_ENV
          echo IMAGE_TAG=$(date -u +"%Y-%m-%dt%H-%M-%Sz")-$GITHUB_REF_NAME-$GIT_HASH >> $GITHUB_ENV
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ env.DOCKER_REPOSITORY }}:${{ env.IMAGE_TAG }}
      - name: Publish the Docker image
        run: docker push ${{ env.DOCKER_REPOSITORY }}:${{ env.IMAGE_TAG }}
